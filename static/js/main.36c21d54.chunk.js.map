{"version":3,"sources":["../../1-use-cases/create-entry/index.js","../../1-use-cases/create-projection/index.js","../../1-use-cases/read-scenario/index.js","../../0-domain/objects/scenario/index.js","Storage/entry.js","Storage/projection.js","Storage/index.js","Models/app.js","App/FinancialScenario/FixedValues/fixed-values.visual.js","App/FinancialScenario/FixedValues/index.js","App/FinancialScenario/CreateEntryDialog/create-entry-dialog.visual.js","App/FinancialScenario/CreateEntryDialog/create-entry-dialog.state.js","App/FinancialScenario/CreateEntryDialog/index.js","App/FinancialScenario/financial-scenario.visual.js","App/FinancialScenario/financial-scenario.state.js","App/FinancialScenario/index.js","App/app.visual.js","App/app.data.js","App/index.js","serviceWorker.js","index.js","../../0-domain/entities/projection/index.js","../../0-domain/entities/entry/index.js","../../2-adapters/gateways/storage/index.js","../../2-adapters/controllers/entry/create/index.js","../../2-adapters/controllers/projection/create/index.js","../../2-adapters/controllers/scenario/read/index.js","../../2-adapters/gateways/storage/entry/index.js","../../2-adapters/gateways/storage/projection/index.js"],"names":["DEPENDENCIES","Entry","require","Projection","CreateEntry","storage","injection","this","create","bind","dependencies","presenter","result","projection","entry","onStart","execute","call","onError","onEnd","async","projectionId","data","Promise","all","readProjection","createEntry","addEntry","updateProjection","Error","readProjectionById","entries","map","e","idlessEntity","module","exports","CreateProjection","createProjection","Scenario","read","scenario","onSuccess","total","reduce","number","value","array","share","Object","defineProperty","get","incoming","expenses","app","next","JSON","parse","localStorage","getItem","setItem","id","readAll","assign","stringify","update","timestamp","Date","now","btoa","Storage","ViewModel","notifier","readScenario","ReadScenario","init","isEmpty","createFirstProjection","onLoadSuccess","onLoadFailure","projections","length","a","title","Function","prototype","isLoading","hasLoadingError","error","NotificationManager","console","log","decorate","observable","action","formarter","Intl","NumberFormat","format","x","toLocaleString","toFixed","Group","name","Fragment","colSpan","Money","source","isDisabled","key","Percentage","type","checked","disabled","percentage","parseInt","Number","isNaN","money","Math","abs","FixedValues","Component","className","difference","CreateEntryDialog","isInvalid","onChangeSource","onChangeValue","onClose","onCreate","useState","parseFloat","random","example","Dialog","open","aria-labelledby","DialogTitle","DialogContent","DialogContentText","TextField","autoFocus","margin","label","fullWidth","placeholder","input","onChange","helperText","DialogActions","Button","onClick","color","INPUT","getSourceError","getValueError","quantity","isFinite","onCreateEntry","setSource","setValue","target","focus","Loading","FinancialScenario","isCreatingEntry","onOpenCreateEntryDialog","onCloseCreateEntryDialog","FinancialScenarioState","onReadScenario","setScenario","setCreatingEntry","useEffect","trial","Failure","Pages","App","props","Content","AppData","observer","viewModel","msg","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","filter","push","freeze","errors","storages","initSubstorages","container","substorages","storageName","Substorage","drive","oldValues","linkWithSubstorage","substorage","getOwnPropertyDescriptors","forEach","descriptor","containerForDrivers","UseCase","uc","oldEntries","driver","values","readEntryById","oldProjections"],"mappings":"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","file":"static/js/main.36c21d54.chunk.js","sourcesContent":["const DEPENDENCIES = {\n  Entry: require('my-domain/entities/entry'),\n  Projection: require('my-domain/entities/projection')\n}\n\nclass CreateEntry {\n  constructor (storage, injection) {\n    this.create = this.create.bind({\n      storage,\n      dependencies: { ...DEPENDENCIES, ...injection }\n    })\n  }\n\n  async create (presenter) {\n    let result = { projection: null, entry: null }\n\n    presenter.onStart()\n\n    try {\n      // mimic private method\n      result = await execute.call(this, presenter)\n    } catch (e) {\n      presenter.onError(e)\n    }\n\n    presenter.onEnd()\n\n    return result\n  }\n}\n\nasync function execute ({ projectionId, entry: data }) {\n  const [projection, entry] = await Promise.all([\n    readProjection.call(this, projectionId),\n    createEntry.call(this, data)\n  ])\n\n  projection.addEntry(entry)\n\n  await this.storage.updateProjection(projection)\n\n  return { projection, entry }\n}\n\nasync function readProjection (projectionId) {\n  if (!projectionId) {\n    throw new Error('Cannot create an entry without projectionId')\n  }\n\n  const { Projection, Entry } = this.dependencies\n\n  const { entries, ...data } = await this.storage.readProjectionById(projectionId)\n\n  const projection = new Projection({ ...data, entries: entries.map(e => new Entry(e)) })\n\n  return projection\n}\n\nasync function createEntry (data) {\n  if (!data) {\n    throw new Error('Cannot create an entry without its data')\n  }\n\n  const { Entry } = this.dependencies\n\n  const idlessEntity = new Entry(data)\n\n  const entry = await this.storage.createEntry(idlessEntity)\n\n  return entry\n}\n\nmodule.exports = CreateEntry\n","const DEPENDENCIES = {\n  Projection: require('my-domain/entities/projection')\n}\n\nclass CreateProjection {\n  constructor (storage, injection) {\n    this.create = this.create.bind({\n      storage,\n      dependencies: { ...DEPENDENCIES, ...injection }\n    })\n  }\n\n  async create (presenter) {\n    const { Projection } = this.dependencies\n    const result = { projection: null }\n\n    presenter.onStart()\n\n    try {\n      const idlessEntity = new Projection({ ...presenter.projection, entries: [] })\n\n      result.projection = await this.storage.createProjection(idlessEntity)\n    } catch (e) {\n      presenter.onError(e)\n    }\n\n    presenter.onEnd()\n\n    return result\n  }\n}\n\nmodule.exports = CreateProjection\n","const DEPENDENCIES = {\n  Entry: require('my-domain/entities/entry'),\n  Projection: require('my-domain/entities/projection'),\n  Scenario: require('my-domain/objects/scenario')\n}\n\nclass CreateEntry {\n  constructor (storage, injection) {\n    this.read = this.read.bind({\n      storage,\n      dependencies: { ...DEPENDENCIES, ...injection }\n    })\n  }\n\n  async read (presenter) {\n    const result = { scenario: null }\n\n    presenter.onStart()\n\n    try {\n      // mimic private method\n      result.scenario = await execute.call(this, presenter)\n    } catch (e) {\n      presenter.onError(e)\n    }\n\n    presenter.onEnd()\n\n    return result\n  }\n}\n\nasync function execute (presenter) {\n  const { Scenario } = this.dependencies\n\n  const projection = await readProjection.call(this, presenter.projectionId)\n\n  const scenario = new Scenario({ projection })\n\n  presenter.onSuccess(scenario)\n\n  return scenario\n}\n\nasync function readProjection (projectionId) {\n  const { Projection, Entry } = this.dependencies\n\n  const { entries, ...data } = await this.storage.readProjectionById(projectionId)\n\n  const projection = new Projection({ ...data, entries: entries.map(e => new Entry(e)) })\n\n  return projection\n}\n\nmodule.exports = CreateEntry\n","function Scenario ({ projection }) {\n  Object.defineProperty(this, 'incoming', {\n    get () {\n      return read(projection.incoming)\n    }\n  })\n\n  Object.defineProperty(this, 'expenses', {\n    get () {\n      return read(projection.expenses)\n    }\n  })\n\n  Object.defineProperty(this, 'difference', {\n    get () {\n      return this.incoming.total + this.expenses.total\n    }\n  })\n\n  return this\n}\n\nfunction read (entries) {\n  const total = entries.reduce((number, { value }) => number + value, 0)\n\n  return {\n    total,\n    entries: entries.reduce((array, entry) => [\n      ...array,\n      {\n        ...entry,\n        share: entry.share(total)\n      }\n    ], [])\n  }\n}\n\nmodule.exports = Scenario\n","const app = {\n  nextEntryId () {\n    const next = JSON.parse(localStorage.getItem('my-money/app/nextEntryId') || 0) + 1\n    localStorage.setItem('my-money/app/nextEntryId', next)\n    return next\n  }\n}\n\nconst entry = {\n  async read ({ id }) {\n    const all = await this.readAll()\n\n    const data = all[id]\n\n    if (!data) return\n\n    return Object.assign({}, data)\n  },\n\n  async create (data) {\n    const entry = { ...data, id: app.nextEntryId() }\n\n    const all = await this.readAll()\n\n    if (all[entry.id]) return this.create(data)\n\n    all[entry.id] = entry\n\n    localStorage.setItem('my-money/entries', JSON.stringify(all))\n\n    return entry\n  },\n\n  async readAll () {\n    const all = localStorage.getItem('my-money/entries') || '{}'\n\n    return JSON.parse(all)\n  }\n}\n\nexport default entry\n","const projection = {\n  async read ({ id }) {\n    const all = await this.readAll()\n\n    const data = all[id]\n\n    if (!data) return\n\n    return Object.assign({}, data)\n  },\n\n  async update ({ id, incoming, expenses }) {\n    const data = await this.read({ id })\n\n    if (!data) return\n\n    data.entries = [...incoming, ...expenses].map(entry => entry.id)\n\n    const all = await this.readAll()\n\n    all[id] = data\n\n    localStorage.setItem('my-money/projections', JSON.stringify(all))\n  },\n\n  async readAll () {\n    const all = localStorage.getItem('my-money/projections') || '{}'\n\n    return JSON.parse(all)\n  },\n\n  async create (data) {\n    const timestamp = Date.now()\n\n    const projection = {\n      ...data,\n      id: btoa(timestamp),\n      timestamp,\n      entries: []\n    }\n\n    const all = await this.readAll()\n\n    if (all[projection.id]) return this.create(data)\n\n    all[projection.id] = projection\n\n    localStorage.setItem('my-money/projections', JSON.stringify(all))\n\n    return projection\n  }\n}\n\nexport default projection\n","import Storage from 'my-adapters/gateways/storage'\n\nimport entry from './entry'\nimport projection from './projection'\n\nconst storage = new Storage({\n  entry,\n  projection\n})\n\nexport default storage\n","import { decorate, observable, action } from 'mobx'\nimport { NotificationManager } from 'react-notifications'\n\nimport CreateEntry from 'my-adapters/controllers/entry/create'\nimport CreateProjection from 'my-adapters/controllers/projection/create'\nimport ReadScenario from 'my-adapters/controllers/scenario/read'\n\nclass ViewModel {\n  isLoading: true\n  hasLoadingError: false\n  projection: null\n\n  constructor (storage, notifier) {\n    this.storage = storage\n    this.notifier = notifier\n\n    this.createEntry = new CreateEntry(this).create\n    this.readScenario = new ReadScenario(this).read\n  }\n\n  get isEmpty () {\n    const { projections = [] } = this.storage\n\n    return !projections.length\n  }\n\n  async init () {\n    try {\n      await this.storage.init()\n\n      if (this.isEmpty) {\n        await createFirstProjection.call(this)\n      }\n\n      onLoadSuccess.call(this)\n    } catch (error) {\n      onLoadFailure.call(this, error)\n    }\n  }\n}\ndecorate(ViewModel, {\n  isLoading: observable,\n  hasLoadingError: observable,\n  projection: observable,\n  init: action\n})\n\nasync function createFirstProjection () {\n  const create = new CreateProjection(this).create\n\n  await create({\n    projection: {\n      title: 'Standard'\n    },\n    onStart: Function.prototype,\n    onError: e => { throw e },\n    onEnd: Function.prototype\n  })\n}\n\nfunction onLoadSuccess () {\n  this.isLoading = false\n  this.hasLoadingError = false\n  this.projection = this.storage.projections[0]\n}\n\nfunction onLoadFailure (error) {\n  NotificationManager.error('Try again later', 'Initializing app failed', 5000)\n  console.log(error)\n\n  this.isLoading = false\n  this.hasLoadingError = true\n}\n\nexport default ViewModel\n","import React from 'react'\n\nconst formarter = Intl && Intl.NumberFormat ? new Intl.NumberFormat() : {\n  format: (x) => x.toLocaleString ? x.toLocaleString() : x.toFixed(2)\n}\n\nfunction FixedValues ({ scenario }) {\n  return (\n    <table className=\"financial__values\">\n      <thead>\n        <tr>\n          <th colSpan=\"4\">Fixed Values</th>\n        </tr>\n        <tr>\n          <th>Source</th>\n          <th>Value</th>\n          <th>Share</th>\n          <th>Disabled?</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr>\n          <th colSpan=\"4\">Incoming</th>\n        </tr>\n        <Group entries={scenario.incoming} name=\"In\" />\n      </tbody>\n      <tbody>\n        <tr>\n          <th colSpan=\"4\">Expenses</th>\n        </tr>\n        <Group entries={scenario.expenses} name=\"Out\" />\n      </tbody>\n      <tfoot>\n        <tr>\n          <th colSpan=\"2\">Yours</th>\n          <Money value={scenario.difference} />\n          <Percentage value={scenario.difference / scenario.incoming.total} />\n        </tr>\n      </tfoot>\n    </table>\n  )\n}\n\nfunction Group ({ entries: { entries, total }, name }) {\n  return (\n    <React.Fragment>\n      {entries.map(Entry)}\n      <tr>\n        <th colSpan=\"3\">{name}</th>\n        <Money value={total} />\n      </tr>\n    </React.Fragment>\n  )\n}\n\nfunction Entry ({ id, source, value, isDisabled, share }) {\n  return (\n    <tr key={id}>\n      <td>{source}</td>\n      <Money value={value} />\n      <Percentage value={share} />\n      <td>\n        <input type=\"checkbox\" checked={isDisabled} disabled />\n      </td>\n    </tr>\n  )\n}\n\nfunction Percentage ({ value }) {\n  const percentage = parseInt((value * 100).toFixed(2), 10)\n\n  return (\n    <td>\n      {Number.isNaN(percentage) ? 0 : formarter.format(percentage)} %\n    </td>\n  )\n}\n\nfunction Money ({ value }) {\n  const money = formarter.format(Math.abs(value))\n\n  return (\n    <td>\n      ${Number.isNaN(money) ? 0 : money}\n    </td>\n  )\n}\n\nexport default FixedValues\n","import Component from './fixed-values.visual'\n\nexport default Component\n","import React, { useState } from 'react'\nimport Button from '@material-ui/core/Button'\nimport TextField from '@material-ui/core/TextField'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport DialogContentText from '@material-ui/core/DialogContentText'\nimport DialogTitle from '@material-ui/core/DialogTitle'\n\nfunction CreateEntryDialog ({ isInvalid, source, value, onChangeSource, onChangeValue, onClose, onCreate }) {\n  // only a visual concern, kept as state to avoid changes on every rerender\n  const [example] = useState(`MY$ ${parseFloat((Math.random() * 100).toFixed(2))}`)\n\n  return (\n    <Dialog open onClose={onClose} aria-labelledby=\"form-dialog-title\">\n      <DialogTitle>Create Entry</DialogTitle>\n      <DialogContent>\n        <DialogContentText>\n          An entry is either an incoming or expense you have periodically.\n        </DialogContentText>\n        <TextField\n          autoFocus\n          margin=\"dense\"\n          id=\"source\"\n          label=\"Where is the money coming from / going to?\"\n          type=\"input\"\n          fullWidth\n          placeholder=\"salary, rent, etc\"\n          value={source.input}\n          onChange={onChangeSource}\n          error={!!source.error}\n          helperText={source.error}\n        />\n        <TextField\n          margin=\"dense\"\n          id=\"value\"\n          label=\"How much?\"\n          type=\"number\"\n          fullWidth\n          placeholder={example}\n          value={value.input}\n          onChange={onChangeValue}\n          error={!!value.error}\n          helperText={value.error || 'Always use the same currency and up to two decimal places'}\n        />\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={onCreate} color=\"primary\" disabled={isInvalid}>\n          Create\n        </Button>\n        <Button onClick={onClose} color=\"primary\">\n          Close\n        </Button>\n      </DialogActions>\n    </Dialog>\n  )\n}\nexport default CreateEntryDialog\n","import React, { useState } from 'react'\n\nimport Component from './create-entry-dialog.visual'\n\nconst INPUT = {\n  input: '',\n  error: null\n}\n\nfunction getSourceError (source) {\n  if (source.length < 3) {\n    return 'Use at least 3 characters to describe the source'\n  }\n\n  if (source.length > 20) {\n    return 'Use at most 20 characters to describe the source'\n  }\n\n  return null\n}\n\nfunction getValueError (value) {\n  const quantity = parseFloat(value)\n\n  if (!Number.isFinite(quantity) || quantity === 0) {\n    return 'Use a non-neutral number'\n  }\n\n  return null\n}\n\nfunction CreateEntryDialog ({ onClose, onCreateEntry }) {\n  const [source, setSource] = useState(INPUT)\n  const [value, setValue] = useState(INPUT)\n\n  const handleSource = ({ target }) => {\n    const { value } = target\n\n    const error = getSourceError(value)\n\n    setSource({\n      input: value,\n      error,\n      target\n    })\n  }\n\n  const handleValue = ({ target: { value } }) => {\n    const error = getValueError(value)\n\n    setValue({\n      input: value,\n      error\n    })\n  }\n\n  const isInvalid = !!(getSourceError(source.input) || getValueError(value.input))\n\n  const handleCreation = async () => {\n    const entry = { source: source.input, value: value.input }\n\n    source.target.focus()\n\n    setSource(INPUT)\n    setValue(INPUT)\n\n    await onCreateEntry(entry)\n  }\n\n  return (\n    <Component\n      isInvalid={isInvalid}\n      source={source}\n      value={value}\n      onChangeSource={handleSource}\n      onChangeValue={handleValue}\n      onClose={onClose}\n      onCreate={handleCreation}\n    />\n  )\n}\nexport default CreateEntryDialog\n","import Component from './create-entry-dialog.state'\n\nexport default Component\n","import React from 'react'\n\nimport FixedValues from './FixedValues'\nimport CreateEntryDialog from './CreateEntryDialog'\n\nimport './financial-scenario.css'\n\nfunction FinancialScenario ({\n  scenario,\n  isCreatingEntry,\n  onOpenCreateEntryDialog,\n  onCloseCreateEntryDialog,\n  onCreateEntry\n}) {\n  if (!scenario) {\n    return <Loading />\n  }\n\n  return (\n    <React.Fragment>\n      <FixedValues scenario={scenario} />\n      <button className=\"financial__create-button\" onClick={onOpenCreateEntryDialog}>\n        Create Entry\n      </button>\n      {isCreatingEntry && <CreateEntryDialog onClose={onCloseCreateEntryDialog} onCreateEntry={onCreateEntry} />}\n    </React.Fragment>\n  )\n}\n\nfunction Loading () {\n  return (<span>LOADING...</span>)\n}\n\nexport default FinancialScenario\n","import React, { useState, useEffect } from 'react'\nimport { NotificationManager } from 'react-notifications'\n\nimport Component from './financial-scenario.visual'\n\nfunction FinancialScenarioState ({ projection, onCreateEntry, onReadScenario }) {\n  const [scenario, setScenario] = useState(null)\n\n  const [isCreatingEntry, setCreatingEntry] = useState(false)\n\n  useEffect(() => {\n    if (!projection) return\n\n    onReadScenario({\n      onStart: Function.prototype,\n      onError: (e) => console.log('scenario', e),\n      onEnd: Function.prototype,\n      onSuccess: setScenario,\n      projectionId: projection.id\n    })\n  }, [onReadScenario, projection])\n\n  const handleCreation = async (entry) => {\n    const trial = async () => {\n      await onCreateEntry({\n        onStart: Function.prototype,\n        onError: (e) => {\n          NotificationManager.error('Click here to retry', 'Creating entry failed', 5000, trial, true)\n          console.log(e)\n        },\n        onEnd: Function.prototype,\n        projectionId: projection.id,\n        entry\n      })\n    }\n\n    await trial()\n  }\n\n  return (\n    <Component\n      scenario={scenario}\n      isCreatingEntry={isCreatingEntry}\n      onOpenCreateEntryDialog={() => setCreatingEntry(true)}\n      onCloseCreateEntryDialog={() => setCreatingEntry(false)}\n      onCreateEntry={handleCreation}\n    />\n  )\n}\n\nexport default FinancialScenarioState\n","import Component from './financial-scenario.state'\n\nexport default Component\n","import React from 'react'\nimport { NotificationContainer } from 'react-notifications'\nimport './app.css'\nimport 'react-notifications/lib/notifications.css'\n\nimport FinancialScenario from './FinancialScenario'\n\nfunction App ({ isLoading, hasLoadingError, ...props }) {\n  const Content = isLoading ? Loading : (hasLoadingError ? Failure : Pages)\n\n  return (\n    <div className=\"App\">\n      <NotificationContainer/>\n      <main className=\"App-main\">\n        <Content {...props} />\n      </main>\n    </div>\n  )\n}\n\nfunction Loading () {\n  return (<span>LOADING...</span>)\n}\n\nfunction Failure () {\n  return (\n    <p>\n      The app is not working right now<br/>\n      Retry in a few minutes\n    </p>\n  )\n}\n\nfunction Pages ({ projection, onCreateEntry, onReadScenario }) {\n  return (\n    <React.Fragment>\n      <FinancialScenario\n        projection={projection}\n        onCreateEntry={onCreateEntry}\n        onReadScenario={onReadScenario}\n      />\n    </React.Fragment>\n  )\n}\n\nexport default App\n","import React, { useEffect } from 'react'\nimport { observer } from 'mobx-react'\n\nimport Storage from 'my-web/src/Storage'\nimport ViewModel from 'my-web/src/Models/app'\n\nimport Component from './app.visual'\n\nconst AppData = observer(({ app }) => {\n  useEffect(() => {\n    app.init()\n  }, [app])\n\n  return (\n    <Component\n      isLoading={app.isLoading}\n      hasLoadingError={app.hasLoadingError}\n      projection={app.projection}\n      onCreateEntry={app.createEntry}\n      onReadScenario={app.readScenario}\n    />\n  )\n})\n\nconst viewModel = new ViewModel(Storage, {\n  onError: (msg) => console.log('error', msg)\n})\n\nexport default () => <AppData app={viewModel} />\n","import Component from './app.data'\n\nexport default Component\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register (config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW (swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker (swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister () {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n","function Projection ({ id, title, timestamp, entries: rawEntries }) {\n  const entries = rawEntries.filter(({ isDisabled }) => !isDisabled)\n\n  Object.assign(this, {\n    id,\n    title,\n    timestamp,\n    addEntry (entry) {\n      if (entry.isDisabled) return\n\n      entries.push(entry)\n    }\n  })\n\n  Object.defineProperty(this, 'incoming', {\n    get () {\n      return entries.filter(({ value }) => value > 0)\n    }\n  })\n\n  Object.defineProperty(this, 'expenses', {\n    get () {\n      return entries.filter(({ value }) => value < 0)\n    }\n  })\n\n  return Object.freeze(this)\n}\n\nmodule.exports = Projection\n","function Entry ({ id, source, value, isDisabled = false }) {\n  Object.assign(this, {\n    id,\n    source,\n    value: parseFloat(value),\n    isDisabled,\n    share (total) {\n      if (Math.abs(total) < Math.abs(value)) throw new Error('Share cannot be bigger than total')\n\n      return value / total\n    }\n  })\n\n  Object.defineProperty(this, 'errors', {\n    get () {\n      const errors = []\n\n      if (!value || (typeof value !== 'number' && !Number.isNaN(value))) {\n        errors.push(new Error('Invalid entry value'))\n      }\n\n      return errors\n    }\n  })\n\n  return Object.freeze(this)\n}\n\nmodule.exports = Entry\n","//  reading dynamically would prevent web apps from being developed =/\nconst DEPENDENCIES = {\n  storages: {\n    entry: require('./entry'),\n    projection: require('./projection')\n  }\n}\n\nfunction Storage (containerForDrivers, injection) {\n  const { storages } = { ...DEPENDENCIES, ...injection }\n\n  return {\n    async init () {\n      const substorages = await initSubstorages(containerForDrivers, storages)\n\n      substorages.forEach(linkWithSubstorage, this)\n    }\n  }\n}\n\nfunction initSubstorages (container, storages) {\n  const substorages = Object.entries(storages).map(async ([storageName, Substorage]) => {\n    const drive = container[storageName]\n\n    if (!drive) {\n      throw new Error(`A drive for ${storageName} was not found`)\n    }\n\n    const oldValues = await drive.readAll()\n\n    return new Substorage(oldValues, container)\n  })\n\n  return Promise.all(substorages)\n}\n\nfunction linkWithSubstorage (substorage) {\n  // TODO: prevent overwritte?\n  Object.assign(this, substorage)\n\n  // TODO: fix setters (and others)?\n  Object.entries(Object.getOwnPropertyDescriptors(substorage))\n    .filter(([key, descriptor]) => typeof descriptor.get === 'function')\n    .forEach(([key, descriptor]) => Object.defineProperty(this, key, descriptor))\n}\n\nmodule.exports = Storage\n","const DEPENDENCIES = {\n  UseCase: require('my-use-cases/create-entry')\n}\n\nfunction CreateEntryController (app, injection) {\n  const { UseCase } = { ...DEPENDENCIES, ...injection }\n\n  const uc = new UseCase(app.storage)\n\n  Object.assign(this, {\n    create: (presenter) => {\n      try {\n        if (!presenter.projectionId) {\n          throw new Error('Projection has not id to be identified')\n        }\n\n        if (!presenter.entry) {\n          throw new Error('Entry has not been defined')\n        }\n\n        /*\n          take notice that even though it's technically possible to create an entry without source and value\n          it's not of this controller's interest to allow so\n        */\n        if (!presenter.entry.source) {\n          throw new Error('Entry cannot be created without a source')\n        }\n\n        if (!presenter.entry.value) {\n          throw new Error('Entry cannot be created without a value')\n        }\n        /* end notice */\n\n        return uc.create(presenter)\n      } catch (error) {\n        presenter.onError(error)\n      }\n    }\n  })\n}\n\nmodule.exports = CreateEntryController\n","const DEPENDENCIES = {\n  UseCase: require('my-use-cases/create-projection')\n}\n\nfunction CreateProjectionController (app, injection) {\n  const { UseCase } = { ...DEPENDENCIES, ...injection }\n\n  const uc = new UseCase(app.storage)\n\n  Object.assign(this, {\n    create: (presenter) => {\n      try {\n        if (!presenter.projection) {\n          throw new Error('Projection has not been defined')\n        }\n\n        /*\n          take notice that even though it's technically possible to create a projection without title\n          it's not of this controller's interest to allow so\n        */\n        if (!presenter.projection.title) {\n          throw new Error('Projection cannot be created without a title')\n        }\n        /* end notice */\n\n        return uc.create(presenter)\n      } catch (error) {\n        presenter.onError(error)\n      }\n    }\n  })\n}\n\nmodule.exports = CreateProjectionController\n","const DEPENDENCIES = {\n  UseCase: require('my-use-cases/read-scenario')\n}\n\nfunction ReadScenarioController (app, injection) {\n  const { UseCase } = { ...DEPENDENCIES, ...injection }\n\n  const uc = new UseCase(app.storage)\n\n  Object.assign(this, {\n    read: (presenter) => {\n      try {\n        if (!presenter.projectionId) {\n          throw new Error('Projection has not id to be identified')\n        }\n\n        return uc.read(presenter)\n      } catch (error) {\n        presenter.onError(error)\n      }\n    }\n  })\n}\n\nmodule.exports = ReadScenarioController\n","function EntryStorage (oldEntries = {}, injection) {\n  const entries = oldEntries\n  const { entry: driver } = { ...injection }\n\n  Object.defineProperty(this, 'entries', {\n    get () {\n      return Object.values(entries)\n    }\n  })\n\n  return Object.assign(this, {\n    async readEntryById (id) {\n      if (!id) {\n        throw new Error('Missing ID when reading by ID')\n      }\n\n      const entry = await driver.read({ id })\n\n      entries[id] = entry\n\n      return entry\n    },\n    async createEntry (data) {\n      const entry = await driver.create(data)\n\n      entries[entry.id] = entry\n\n      return entry\n    }\n  })\n}\n\nmodule.exports = EntryStorage\n","function ProjectionStorage (oldProjections = {}, injection) {\n  const projections = oldProjections\n  const { projection: driver } = { ...injection }\n\n  Object.defineProperty(this, 'projections', {\n    get () {\n      return Object.values(projections)\n    }\n  })\n\n  return Object.assign(this, {\n    async readProjectionById (id) {\n      if (!id) {\n        throw new Error('Missing ID when reading by ID')\n      }\n\n      const projection = await driver.read({ id })\n\n      if (projection) {\n        projection.entries = await Promise.all(projection.entries.map(this.readEntryById))\n      }\n\n      projections[id] = projection\n\n      return projection\n    },\n    async updateProjection (target) {\n      if (!target) {\n        throw new Error('Missing projection to update')\n      }\n\n      const projection = projections[target.id]\n\n      if (!projection) {\n        throw new Error('Unkown projection canot be updated')\n      }\n\n      await driver.update(target)\n\n      projections[target.id] = target\n    },\n    async createProjection (data) {\n      const projection = await driver.create(data)\n\n      projections[projection.id] = projection\n\n      return projection\n    }\n  })\n}\n\nmodule.exports = ProjectionStorage\n"],"sourceRoot":""}