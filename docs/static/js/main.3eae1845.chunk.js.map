{"version":3,"sources":["../../1-use-cases/create-entry/index.js","../../1-use-cases/create-projection/index.js","../../1-use-cases/read-scenario/index.js","../../0-domain/objects/scenario/index.js","Storage/index.js","App/FinancialScenario/FixedValues/fixed-values.visual.js","App/FinancialScenario/FixedValues/index.js","App/FinancialScenario/CreateEntryDialog/create-entry-dialog.visual.js","App/FinancialScenario/CreateEntryDialog/create-entry-dialog.state.js","App/FinancialScenario/CreateEntryDialog/index.js","App/FinancialScenario/financial-scenario.visual.js","App/FinancialScenario/financial-scenario.state.js","App/FinancialScenario/index.js","App/app.visual.js","App/app.view-model.js","App/app.data.js","App/index.js","serviceWorker.js","index.js","../../0-domain/entities/projection/index.js","../../0-domain/entities/entry/index.js","../../2-adapters/gateways/storage/index.js","../../2-adapters/controllers/entry/create/index.js","../../2-adapters/controllers/projection/create/index.js","../../2-adapters/controllers/scenario/read/index.js","../../2-adapters/gateways/storage/entry/index.js","../../2-adapters/gateways/storage/projection/index.js"],"names":["DEPENDENCIES","Entry","require","Projection","CreateEntry","storage","injection","this","execute","bind","dependencies","presenter","onStart","create","call","onError","onEnd","async","projectionId","data","entry","Promise","all","readProjection","createEntry","projection","addEntry","updateProjection","readProjectionById","entries","map","e","idlessEntity","module","exports","CreateProjection","createProjection","Scenario","read","scenario","onSuccess","total","reduce","number","value","array","share","Object","defineProperty","get","incoming","expenses","app","next","JSON","parse","localStorage","getItem","setItem","id","readAll","assign","stringify","update","timestamp","Date","now","btoa","Storage","Group","name","Fragment","colSpan","Money","source","isDisabled","key","Percentage","type","checked","disabled","percentage","parseInt","toFixed","Number","isNaN","money","Math","abs","FixedValues","Component","className","difference","CreateEntryDialog","isInvalid","onChangeSource","onChangeValue","onClose","onCreate","useState","parseFloat","random","example","Dialog","open","aria-labelledby","DialogTitle","DialogContent","DialogContentText","TextField","autoFocus","margin","label","fullWidth","placeholder","input","onChange","error","helperText","DialogActions","Button","onClick","color","INPUT","getSourceError","length","getValueError","quantity","isFinite","onCreateEntry","setSource","setValue","target","a","focus","Loading","FinancialScenario","isCreatingEntry","onOpenCreateEntryDialog","onCloseCreateEntryDialog","FinancialScenarioState","onReadScenario","setScenario","setCreatingEntry","useEffect","Function","prototype","console","log","trial","NotificationManager","Failure","Pages","App","isLoading","hasLoadingError","props","Content","ViewModel","notifier","readScenario","ReadScenario","init","isEmpty","createFirstProjection","onLoadSuccess","onLoadFailure","projections","title","decorate","observable","action","AppData","observer","viewModel","msg","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","filter","push","freeze","Error","errors","storages","initSubstorages","container","substorages","storageName","Substorage","drive","oldValues","linkWithSubstorage","substorage","getOwnPropertyDescriptors","forEach","descriptor","containerForDrivers","UseCase","uc","oldEntries","driver","values","readEntryById","oldProjections"],"mappings":"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","file":"static/js/main.3eae1845.chunk.js","sourcesContent":["const DEPENDENCIES = {\n  Entry: require('my-domain/entities/entry'),\n  Projection: require('my-domain/entities/projection')\n}\n\nclass CreateEntry {\n  constructor (storage, injection) {\n    this.execute = this.execute.bind({\n      storage,\n      dependencies: { ...DEPENDENCIES, ...injection }\n    })\n  }\n\n  async execute (presenter) {\n    presenter.onStart()\n\n    try {\n      // mimic private method\n      await create.call(this, presenter)\n    } catch (e) {\n      presenter.onError(e)\n    }\n\n    presenter.onEnd()\n  }\n}\n\nasync function create ({ projectionId, entry: data }) {\n  const [projection, entry] = await Promise.all([\n    readProjection.call(this, projectionId),\n    createEntry.call(this, data)\n  ])\n\n  projection.addEntry(entry)\n\n  await this.storage.updateProjection(projection)\n}\n\nasync function readProjection (projectionId) {\n  const { Projection, Entry } = this.dependencies\n\n  const { entries, ...data } = await this.storage.readProjectionById(projectionId)\n\n  const projection = new Projection({ ...data, entries: entries.map(e => new Entry(e)) })\n\n  return projection\n}\n\nasync function createEntry (data) {\n  const { Entry } = this.dependencies\n\n  const idlessEntity = new Entry(data)\n\n  const entry = await this.storage.createEntry(idlessEntity)\n\n  return entry\n}\n\nmodule.exports = CreateEntry\n","const DEPENDENCIES = {\n  Projection: require('my-domain/entities/projection')\n}\n\nclass CreateProjection {\n  constructor (storage, injection) {\n    this.execute = this.execute.bind({\n      storage,\n      dependencies: { ...DEPENDENCIES, ...injection }\n    })\n  }\n\n  async execute (presenter) {\n    const { Projection } = this.dependencies\n\n    presenter.onStart()\n\n    try {\n      const idlessEntity = new Projection({ ...presenter.projection, entries: [] })\n\n      await this.storage.createProjection(idlessEntity)\n    } catch (e) {\n      presenter.onError(e)\n    }\n\n    presenter.onEnd()\n  }\n}\n\nmodule.exports = CreateProjection\n","const DEPENDENCIES = {\n  Entry: require('my-domain/entities/entry'),\n  Projection: require('my-domain/entities/projection'),\n  Scenario: require('my-domain/objects/scenario')\n}\n\nclass CreateEntry {\n  constructor (storage, injection) {\n    this.execute = this.execute.bind({\n      storage,\n      dependencies: { ...DEPENDENCIES, ...injection }\n    })\n  }\n\n  async execute (presenter) {\n    presenter.onStart()\n\n    try {\n      // mimic private method\n      await read.call(this, presenter)\n    } catch (e) {\n      presenter.onError(e)\n    }\n\n    presenter.onEnd()\n  }\n}\n\nasync function read (presenter) {\n  const { Scenario } = this.dependencies\n\n  const projection = await readProjection.call(this, presenter.projectionId)\n\n  const scenario = new Scenario({ projection })\n\n  presenter.onSuccess(scenario)\n}\n\nasync function readProjection (projectionId) {\n  const { Projection, Entry } = this.dependencies\n\n  const { entries, ...data } = await this.storage.readProjectionById(projectionId)\n\n  const projection = new Projection({ ...data, entries: entries.map(e => new Entry(e)) })\n\n  return projection\n}\n\nmodule.exports = CreateEntry\n","function Scenario ({ projection }) {\n  Object.defineProperty(this, 'incoming', {\n    get () {\n      return read(projection.incoming)\n    }\n  })\n\n  Object.defineProperty(this, 'expenses', {\n    get () {\n      return read(projection.expenses)\n    }\n  })\n\n  Object.defineProperty(this, 'difference', {\n    get () {\n      return this.incoming.total + this.expenses.total\n    }\n  })\n\n  return this\n}\n\nfunction read (entries) {\n  const total = entries.reduce((number, { value }) => number + value, 0)\n\n  return {\n    total,\n    entries: entries.reduce((array, entry) => [\n      ...array,\n      {\n        ...entry,\n        share: entry.share(total)\n      }\n    ], [])\n  }\n}\n\nmodule.exports = Scenario\n","import Storage  from 'my-adapters/gateways/storage'\n\nconst app = {\n  nextEntryId() {\n    const next = JSON.parse(localStorage.getItem('my-money/app/nextEntryId') || 0) + 1\n    localStorage.setItem('my-money/app/nextEntryId', next)\n    return next\n  }\n}\n\nconst entry = {\n  async read ({ id }) {\n    const all = await this.readAll()\n\n    const data = all[id]\n\n    if (!data) return\n\n    return Object.assign({}, data)\n  },\n  async create (data) {\n    const entry = { ...data, id: app.nextEntryId() }\n\n    const all = await this.readAll()\n\n    if (all[entry.id]) return this.create(data)\n\n    all[entry.id] = entry\n\n    localStorage.setItem('my-money/entries', JSON.stringify(all))\n\n    return entry\n  },\n  async readAll () {\n    const all = localStorage.getItem('my-money/entries') || '{}'\n\n    return JSON.parse(all)\n  }\n}\n\nconst projection = {\n  async read ({ id }) {\n    const all = await this.readAll()\n\n    const data = all[id]\n\n    if (!data) return\n\n    return Object.assign({}, data)\n  },\n  async update ({ id, incoming, expenses }) {\n    const data = await this.read({ id })\n\n    if (!data) return\n\n    data.entries = [...incoming, ...expenses].map(entry => entry.id)\n\n    const all = await this.readAll()\n\n    all[id] = data\n\n    localStorage.setItem('my-money/projections', JSON.stringify(all))\n  },\n  async readAll () {\n    const all = localStorage.getItem('my-money/projections') || '{}'\n\n    return JSON.parse(all)\n  },\n  async create (data) {\n    const timestamp = Date.now()\n\n    const projection = {\n      ...data,\n      id: btoa(timestamp),\n      timestamp,\n      entries: []\n    }\n\n    const all = await this.readAll()\n\n    if (all[projection.id]) return this.create(data)\n\n    all[projection.id] = projection\n\n    localStorage.setItem('my-money/projections', JSON.stringify(all))\n\n    return projection\n  },\n}\n\nconst storage = new Storage({\n  entry,\n  projection\n})\n\nexport default storage\n","import React from 'react';\n\nfunction FixedValues({ scenario }) {\n  return (\n    <table className=\"financial__values\">\n      <thead>\n        <tr>\n          <th colSpan=\"4\">Fixed Values</th>\n        </tr>\n        <tr>\n          <th>Source</th>\n          <th>Value</th>\n          <th>Share</th>\n          <th>Disabled?</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr>\n          <th colSpan=\"4\">Incoming</th>\n        </tr>\n        <Group entries={scenario.incoming} name=\"In\" />\n      </tbody>\n      <tbody>\n        <tr>\n          <th colSpan=\"4\">Expenses</th>\n        </tr>\n        <Group entries={scenario.expenses} name=\"Out\" />\n      </tbody>\n      <tfoot>\n        <tr>\n          <th colSpan=\"2\">Yours</th>\n          <Money value={scenario.difference} />\n          <Percentage value={scenario.difference / scenario.incoming.total} />\n        </tr>\n      </tfoot>\n    </table>\n  )\n}\n\nfunction Group({ entries: { entries, total }, name }) {\n  return (\n    <React.Fragment>\n      {entries.map(Entry)}\n      <tr>\n        <th colSpan=\"3\">{name}</th>\n        <Money value={total} />\n      </tr>\n    </React.Fragment>\n  )\n}\n\nfunction Entry({ id, source, value, isDisabled, share }) {\n  return (\n    <tr key={id}>\n      <td>{source}</td>\n      <Money value={value} />\n      <Percentage value={share} />\n      <td>\n        <input type=\"checkbox\" checked={isDisabled} disabled />\n      </td>\n    </tr>\n  )\n}\n\nfunction Percentage({ value }) {\n  const percentage = parseInt((value * 100).toFixed(2), 10)\n\n  return (\n    <td>\n      {Number.isNaN(percentage) ? 0 : percentage} %\n    </td>\n  )\n}\n\nfunction Money({ value }) {\n  const money = value.toFixed(2)\n\n  return (\n    <td>\n      ${Number.isNaN(money) ? 0 : Math.abs(money)}\n    </td>\n  )\n}\n\nexport default FixedValues\n","import Component from  './fixed-values.visual'\n\nexport default Component\n","import React, { useState } from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nfunction CreateEntryDialog({ isInvalid, source, value, onChangeSource, onChangeValue, onClose, onCreate }) {\n  // only a visual concern, kept as state to avoid changes on every rerender\n  const [example] = useState(`MY$ ${parseFloat((Math.random() * 100).toFixed(2))}`)\n\n  return (\n    <Dialog open onClose={onClose} aria-labelledby=\"form-dialog-title\">\n      <DialogTitle>Create Entry</DialogTitle>\n      <DialogContent>\n        <DialogContentText>\n          An entry is either an incoming or expense you have periodically.\n        </DialogContentText>\n        <TextField\n          autoFocus\n          margin=\"dense\"\n          id=\"source\"\n          label=\"Where is the money coming from / going to?\"\n          type=\"input\"\n          fullWidth\n          placeholder=\"salary, rent, etc\"\n          value={source.input}\n          onChange={onChangeSource}\n          error={!!source.error}\n          helperText={source.error}\n        />\n        <TextField\n          margin=\"dense\"\n          id=\"value\"\n          label=\"How much?\"\n          type=\"number\"\n          fullWidth\n          placeholder={example}\n          value={value.input}\n          onChange={onChangeValue}\n          error={!!value.error}\n          helperText={value.error || 'Always use the same currency and up to two decimal places'}\n        />\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={onCreate} color=\"primary\" disabled={isInvalid}>\n          Create\n        </Button>\n        <Button onClick={onClose} color=\"primary\">\n          Close\n        </Button>\n      </DialogActions>\n    </Dialog>\n  )\n}\nexport default CreateEntryDialog\n","import React, { useState } from 'react';\n\nimport Component from './create-entry-dialog.visual'\n\nconst INPUT = {\n  input: '',\n  error: null,\n}\n\nfunction getSourceError(source) {\n  if (source.length < 3) {\n    return 'Use at least 3 characters to describe the source'\n  }\n\n  if (source.length > 20) {\n    return 'Use at most 20 characters to describe the source'\n  }\n\n  return null\n}\n\nfunction getValueError(value) {\n  const quantity = parseFloat(value)\n\n  if (!Number.isFinite(quantity) || quantity === 0) {\n    return 'Use a non-neutral number'\n  }\n\n  return null\n}\n\nfunction CreateEntryDialog({ onClose, onCreateEntry }) {\n  const [source, setSource] = useState(INPUT)\n  const [value, setValue] = useState(INPUT)\n\n  const handleSource = (({ target }) => {\n    const { value } = target\n\n    const error = getSourceError(value)\n\n    setSource({\n      input: value,\n      error,\n      target\n    });\n  });\n\n  const handleValue = (({ target: { value } }) => {\n    const error = getValueError(value)\n\n    setValue({\n      input: value,\n      error\n    });\n  })\n\n  const isInvalid = !!(getSourceError(source.input) || getValueError(value.input))\n\n  const handleCreation = async () => {\n    const entry = { source: source.input, value: value.input }\n\n    source.target.focus()\n\n    setSource(INPUT)\n    setValue(INPUT)\n\n    await onCreateEntry(entry)\n  }\n\n  return (\n    <Component\n      isInvalid={isInvalid}\n      source={source}\n      value={value}\n      onChangeSource={handleSource}\n      onChangeValue={handleValue}\n      onClose={onClose}\n      onCreate={handleCreation}\n    />\n  )\n}\nexport default CreateEntryDialog\n","import Component from  './create-entry-dialog.state'\n\nexport default Component\n","import React from 'react';\n\nimport FixedValues from './FixedValues'\nimport CreateEntryDialog from './CreateEntryDialog'\n\nimport './financial-scenario.css';\n\nfunction FinancialScenario({\n  scenario,\n  isCreatingEntry,\n  onOpenCreateEntryDialog,\n  onCloseCreateEntryDialog,\n  onCreateEntry\n}) {\n  if (!scenario) {\n    return <Loading />\n  }\n\n  return (\n    <React.Fragment>\n      <FixedValues scenario={scenario} />\n      <button className=\"financial__create-button\" onClick={onOpenCreateEntryDialog}>\n        Create Entry\n      </button>\n      {isCreatingEntry && <CreateEntryDialog onClose={onCloseCreateEntryDialog} onCreateEntry={onCreateEntry} />}\n    </React.Fragment>\n  )\n}\n\nfunction Loading() {\n  return (<span>LOADING...</span>)\n}\n\n\nexport default FinancialScenario\n","import React, { useState, useEffect } from 'react';\nimport { NotificationManager } from 'react-notifications';\n\nimport Component from  './financial-scenario.visual'\n\nfunction FinancialScenarioState({ projection , onCreateEntry, onReadScenario }) {\n  const [scenario, setScenario] = useState(null);\n\n  const [isCreatingEntry, setCreatingEntry] = useState(false);\n\n  useEffect(() => {\n    if (!projection) return\n\n    onReadScenario({\n      onStart: Function.prototype,\n      onError: (e) => console.log('scenario', e),\n      onEnd: Function.prototype,\n      onSuccess: setScenario,\n      projectionId: projection.id\n    })\n  }, [onReadScenario, projection]);\n\n  const handleCreation = async (entry) => {\n    const trial = async () => {\n      await onCreateEntry({\n        onStart: Function.prototype,\n        onError: (e) => {\n          NotificationManager.error('Click here to retry', 'Creating entry failed', 5000, trial, true);\n          console.log(e)\n        },\n        onEnd: Function.prototype,\n        projectionId: projection.id,\n        entry\n      })\n    }\n\n    await trial()\n  }\n\n  return (\n    <Component\n      scenario={scenario}\n      isCreatingEntry={isCreatingEntry}\n      onOpenCreateEntryDialog={() => setCreatingEntry(true)}\n      onCloseCreateEntryDialog={() => setCreatingEntry(false)}\n      onCreateEntry={handleCreation}\n    />\n  )\n}\n\nexport default FinancialScenarioState\n","import Component from  './financial-scenario.state'\n\nexport default Component\n","import React from 'react';\nimport { NotificationContainer } from 'react-notifications';\nimport './app.css';\nimport 'react-notifications/lib/notifications.css';\n\nimport FinancialScenario from './FinancialScenario'\n\nfunction App({ isLoading, hasLoadingError, ...props }) {\n  const Content = isLoading ? Loading : (hasLoadingError ? Failure : Pages)\n\n  return (\n    <div className=\"App\">\n      <NotificationContainer/>\n      <main className=\"App-main\">\n        <Content {...props} />\n      </main>\n    </div>\n  );\n}\n\nfunction Loading() {\n  return (<span>LOADING...</span>)\n}\n\nfunction Failure() {\n  return (\n    <p>\n      The app is not working right now<br/>\n      Retry in a few minutes\n    </p>\n  )\n}\n\nfunction Pages({ projection, onCreateEntry, onReadScenario }) {\n  return (\n    <React.Fragment>\n      <FinancialScenario\n        projection={projection}\n        onCreateEntry={onCreateEntry}\n        onReadScenario={onReadScenario}\n      />\n    </React.Fragment>\n  )\n}\n\nexport default App;\n","import { decorate, observable, action } from \"mobx\"\nimport { NotificationManager } from 'react-notifications';\n\nimport CreateEntry from 'my-adapters/controllers/entry/create'\nimport CreateProjection from 'my-adapters/controllers/projection/create'\nimport ReadScenario from 'my-adapters/controllers/scenario/read'\n\nclass ViewModel {\n  isLoading: true\n  hasLoadingError: false\n  projection: null\n\n  constructor(storage, notifier) {\n    this.storage = storage\n    this.notifier = notifier\n\n    this.createEntry = new CreateEntry(this).create\n    this.readScenario = new ReadScenario(this).read\n  }\n\n  get isEmpty() {\n    const { projections = [] } = this.storage\n\n    return !projections.length\n  }\n\n  async init() {\n    try {\n      await this.storage.init()\n\n      if (this.isEmpty) {\n        await createFirstProjection.call(this)\n      }\n\n      onLoadSuccess.call(this)\n    } catch (error) {\n      onLoadFailure.call(this, error)\n    }\n  }\n}\ndecorate(ViewModel, {\n  isLoading: observable,\n  hasLoadingError: observable,\n  projection: observable,\n  init: action\n})\n\nasync function createFirstProjection() {\n  const create = new CreateProjection(this).create\n\n  await create({\n    projection: {\n      title: 'Standard',\n    },\n    onStart: Function.prototype,\n    onError: e => { throw e },\n    onEnd: Function.prototype,\n  })\n}\n\nfunction onLoadSuccess() {\n  this.isLoading = false\n  this.hasLoadingError = false\n  this.projection = this.storage.projections[0]\n}\n\nfunction onLoadFailure(error) {\n  NotificationManager.error('Try again later', 'Initializing app failed', 5000);\n  console.log(error)\n\n  this.isLoading = false\n  this.hasLoadingError = true\n}\n\nexport default ViewModel\n","import React, { useEffect } from \"react\"\nimport { observer } from \"mobx-react\"\n\nimport Storage from '../Storage'\n\nimport Component from './app.visual'\nimport ViewModel from './app.view-model'\n\nconst AppData = observer(({ app }) => {\n  useEffect(() => {\n    app.init()\n  }, [app])\n\n  return (\n    <Component\n      isLoading={app.isLoading}\n      hasLoadingError={app.hasLoadingError}\n      projection={app.projection}\n      onCreateEntry={app.createEntry}\n      onReadScenario={app.readScenario}\n    />\n  )\n})\n\nconst viewModel = new ViewModel(Storage, {\n  onError: (msg) => console.log('error', msg)\n})\n\nexport default () => <AppData app={viewModel} />\n","import Component from  './app.data'\n\nexport default Component\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","function Projection ({ id, title, timestamp, entries: rawEntries }) {\n  const entries = rawEntries.filter(({ isDisabled }) => !isDisabled)\n\n  Object.assign(this, {\n    id,\n    title,\n    timestamp,\n    addEntry (entry) {\n      if (entry.isDisabled) return\n\n      entries.push(entry)\n    }\n  })\n\n  Object.defineProperty(this, 'incoming', {\n    get () {\n      return entries.filter(({ value }) => value > 0)\n    }\n  })\n\n  Object.defineProperty(this, 'expenses', {\n    get () {\n      return entries.filter(({ value }) => value < 0)\n    }\n  })\n\n  return Object.freeze(this)\n}\n\nmodule.exports = Projection\n","function Entry ({ id, source, value, isDisabled = false }) {\n  Object.assign(this, {\n    id,\n    source,\n    value: parseFloat(value),\n    isDisabled,\n    share (total) {\n      if (Math.abs(total) < Math.abs(value)) throw new Error('Share cannot be bigger than total')\n\n      return value / total\n    }\n  })\n\n  Object.defineProperty(this, 'errors', {\n    get () {\n      const errors = []\n\n      if (!value || (typeof value !== 'number' && !Number.isNaN(value))) {\n        errors.push(new Error('Invalid entry value'))\n      }\n\n      return errors\n    }\n  })\n\n  return Object.freeze(this)\n}\n\nmodule.exports = Entry\n","//  reading dynamically would prevent web apps from being developed =/\nconst DEPENDENCIES = {\n  storages: {\n    entry: require('./entry'),\n    projection: require('./projection')\n  }\n}\n\nfunction Storage (containerForDrivers, injection) {\n  const { storages } = { ...DEPENDENCIES, ...injection }\n\n  return {\n    async init () {\n      const substorages = await initSubstorages(containerForDrivers, storages)\n\n      substorages.forEach(linkWithSubstorage, this)\n    }\n  }\n}\n\nfunction initSubstorages (container, storages) {\n  const substorages = Object.entries(storages).map(async ([storageName, Substorage]) => {\n    const drive = container[storageName]\n\n    if (!drive) {\n      throw new Error(`A drive for ${storageName} was not found`)\n    }\n\n    const oldValues = await drive.readAll()\n\n    return new Substorage(oldValues, container)\n  })\n\n  return Promise.all(substorages)\n}\n\nfunction linkWithSubstorage (substorage) {\n  // TODO: prevent overwritte?\n  Object.assign(this, substorage)\n\n  // TODO: fix setters (and others)?\n  Object.entries(Object.getOwnPropertyDescriptors(substorage))\n    .filter(([key, descriptor]) => typeof descriptor.get === 'function')\n    .forEach(([key, descriptor]) => Object.defineProperty(this, key, descriptor))\n}\n\nmodule.exports = Storage\n","const DEPENDENCIES = {\n  UseCase: require('my-use-cases/create-entry')\n}\n\nfunction CreateEntryController (app, injection) {\n  const { UseCase } = { ...DEPENDENCIES, ...injection }\n\n  const uc = new UseCase(app.storage)\n\n  Object.assign(this, {\n    create: uc.execute\n  })\n}\n\nmodule.exports = CreateEntryController\n","const DEPENDENCIES = {\n  UseCase: require('my-use-cases/create-projection')\n}\n\nfunction CreateProjectionController (app, injection) {\n  const { UseCase } = { ...DEPENDENCIES, ...injection }\n\n  const uc = new UseCase(app.storage)\n\n  Object.assign(this, {\n    create: uc.execute\n  })\n}\n\nmodule.exports = CreateProjectionController\n","const DEPENDENCIES = {\n  UseCase: require('my-use-cases/read-scenario')\n}\n\nfunction ReadScenarioController (app, injection) {\n  const { UseCase } = { ...DEPENDENCIES, ...injection }\n\n  const uc = new UseCase(app.storage)\n\n  Object.assign(this, {\n    read: uc.execute\n  })\n}\n\nmodule.exports = ReadScenarioController\n","function EntryStorage (oldEntries = {}, injection) {\n  const entries = oldEntries\n  const { entry: driver } = { ...injection }\n\n  Object.defineProperty(this, 'entries', {\n    get () {\n      return Object.values(entries)\n    }\n  })\n\n  return Object.assign(this, {\n    async readEntryById (id) {\n      if (!id) {\n        throw new Error('Missing ID when reading by ID')\n      }\n\n      const entry = await driver.read({ id })\n\n      entries[id] = entry\n\n      return entry\n    },\n    async createEntry (data) {\n      const entry = await driver.create(data)\n\n      entries[entry.id] = entry\n\n      return entry\n    }\n  })\n}\n\nmodule.exports = EntryStorage\n","function ProjectionStorage (oldProjections = {}, injection) {\n  const projections = oldProjections\n  const { projection: driver } = { ...injection }\n\n  Object.defineProperty(this, 'projections', {\n    get () {\n      return Object.values(projections)\n    }\n  })\n\n  return Object.assign(this, {\n    async readProjectionById (id) {\n      if (!id) {\n        throw new Error('Missing ID when reading by ID')\n      }\n\n      const projection = await driver.read({ id })\n\n      if (projection) {\n        projection.entries = await Promise.all(projection.entries.map(this.readEntryById))\n      }\n\n      projections[id] = projection\n\n      return projection\n    },\n    async updateProjection (target) {\n      if (!target) {\n        throw new Error('Missing projection to update')\n      }\n\n      const projection = projections[target.id]\n\n      if (!projection) {\n        throw new Error('Unkown projection canot be updated')\n      }\n\n      await driver.update(target)\n\n      projections[target.id] = target\n    },\n    async createProjection (data) {\n      const projection = await driver.create(data)\n\n      projections[projection.id] = projection\n\n      return projection\n    }\n  })\n}\n\nmodule.exports = ProjectionStorage\n"],"sourceRoot":""}